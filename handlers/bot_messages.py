from aiogram.types import Message
from aiogram import Router
from data import DataBase
from keyboards import fabrics

router = Router()


@router.message()
async def echo(message: Message):
    msg = message.text.lower()
    print(msg)
    user_id = message.from_user.id
    role = DataBase.get_user_role(user_id)
    list_favorite_tracks_user_tuple = DataBase.get_list_select_user_favorite_tracks(user_id)
    list_title_tracks_likes = [[track['title'], track['artist']] for track in list_favorite_tracks_user_tuple]
    # login = DataBase.get_user_login(user_id)

    if msg == '–º–æ–∏ –ª–∞–π–∫–∏' and (role == 1 or role == 2):
        print(user_id, role)



        await message.answer("–í–æ—Ç 10 —Ç—Ä–µ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ, "
                             "–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å—Ç—Ä–µ–ª–∫–∞–º–∏.\nüíø–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1:\n",
                             reply_markup=fabrics.paginator_likes(0, list_title_tracks_likes))
    elif msg == "–º–æ–∏ –∞–ª—å–±–æ–º—ã":
        await message.answer("–í–æ—Ç 10 –∞–ª—å–±–æ–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ, "
                             "–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å—Ç—Ä–µ–ª–∫–∞–º–∏.\nüíΩ–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1:\n", reply_markup=fabrics.paginator_albums())
    elif msg == '—á–∞—Ä—Ç':
        res = DataBase.update_chart_list()

        await message.answer('–í–æ—Ç 10 —Ç—Ä–µ–∫–æ–≤ —á–∞—Ä—Ç–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ, '
                             '–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å—Ç—Ä–µ–ª–∫–∞–º–∏.\nüóíÔ∏èüèÜ–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1:\n',
                             reply_markup=fabrics.paginator_chart())

    else:
        await message.answer("–Ø –Ω–µ –ø–æ–Ω—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.")
